import { NextRequest, NextResponse } from "next/server";
import { ConfidentialClientApplication, AuthorizationCodeRequest } from "@azure/msal-node";
import { saveTokens } from "@/lib/store";

function msalApp() {
  return new ConfidentialClientApplication({
    auth: {
      clientId: process.env.AZURE_CLIENT_ID!,
      authority: `https://login.microsoftonline.com/${process.env.AZURE_TENANT_ID}`,
      clientSecret: process.env.AZURE_CLIENT_SECRET!,
    },
  });
}

export async function GET(req: NextRequest) {
  try {
    const code = req.nextUrl.searchParams.get("code");
    if (!code) return NextResponse.json({ error: "missing_code" }, { status: 400 });

    const redirectUri = `${process.env.APP_BASE_URL}/api/auth/callback`;

    const tokenReq: AuthorizationCodeRequest = {
      code,
      scopes: [
        "openid", "profile", "offline_access",
        "https://graph.microsoft.com/User.Read",
        "https://graph.microsoft.com/Mail.Send",
        "https://graph.microsoft.com/Calendars.ReadWrite",
        "https://graph.microsoft.com/MailboxSettings.Read"
      ],
      redirectUri,
    };

    const app = msalApp();
    const result = await app.acquireTokenByCode(tokenReq);

    const access = result?.accessToken;
    const refresh = (result as any)?.refreshToken; // msal-node trả refreshToken trong result
    const expiresOn = result?.expiresOn?.getTime() || (Date.now() + 3000 * 1000);

    // Lấy email của user (để map userId)
    const me = await fetch("https://graph.microsoft.com/v1.0/me", {
      headers: { Authorization: `Bearer ${access}` }
    }).then(r => r.json());

    const userId = me.mail || me.userPrincipalName; // ví dụ: tung@vitadairy.com.vn

    if (!userId) throw new Error("Cannot resolve user email");
    saveTokens(userId, { access_token: access, refresh_token: refresh, expires_at: expiresOn });

    // Trả trang xác nhận đơn giản
    return new NextResponse(
      `<html><body><h3>✅ Đã liên kết tài khoản Microsoft cho ${userId}.</h3>
       <p>Bạn có thể quay lại GPT để đặt phòng & tạo lịch.</p></body></html>`,
      { headers: { "Content-Type": "text/html" } }
    );
  } catch (e:any) {
    return new NextResponse(`<pre>Auth error: ${e.message}</pre>`, { headers: { "Content-Type": "text/html" }, status: 400 });
  }
}

